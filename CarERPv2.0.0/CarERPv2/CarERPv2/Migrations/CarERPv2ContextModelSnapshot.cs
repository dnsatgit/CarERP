// <auto-generated />
using CarERPv2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CarERPv2.Migrations
{
    [DbContext(typeof(CarERPv2Context))]
    partial class CarERPv2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarERPv2.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("DOB");

                    b.Property<string>("FirstNameMI")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("password")
                        .IsRequired();

                    b.HasKey("CustomerID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("CarERPv2.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstNameMI");

                    b.Property<string>("LastName");

                    b.Property<bool>("RequestValidation");

                    b.Property<int?>("requestsRequestID");

                    b.HasKey("EmployeeID");

                    b.HasIndex("requestsRequestID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CarERPv2.Models.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ItemName");

                    b.Property<decimal>("Price");

                    b.HasKey("ItemID");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("CarERPv2.Models.Request", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cost");

                    b.Property<int>("CustomerID");

                    b.Property<string>("Description");

                    b.Property<int?>("EmployeeID");

                    b.Property<int>("ItemID");

                    b.Property<int>("ServicesID");

                    b.Property<string>("Vehicle");

                    b.HasKey("RequestID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ItemID");

                    b.HasIndex("ServicesID");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("CarERPv2.Models.Services", b =>
                {
                    b.Property<int>("ServicesID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerRating");

                    b.Property<DateTime>("ListedDate");

                    b.Property<decimal>("Price");

                    b.Property<string>("ServiceName");

                    b.Property<string>("ServiceType");

                    b.HasKey("ServicesID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("CarERPv2.Models.Employee", b =>
                {
                    b.HasOne("CarERPv2.Models.Request", "requests")
                        .WithMany()
                        .HasForeignKey("requestsRequestID");
                });

            modelBuilder.Entity("CarERPv2.Models.Request", b =>
                {
                    b.HasOne("CarERPv2.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CarERPv2.Models.Employee")
                        .WithMany("Requests")
                        .HasForeignKey("EmployeeID");

                    b.HasOne("CarERPv2.Models.Item", "items")
                        .WithMany("Requests")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CarERPv2.Models.Services", "service")
                        .WithMany("Requests")
                        .HasForeignKey("ServicesID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
